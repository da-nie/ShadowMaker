#include "vector.h"

//*************************************************************************************************************************
//Назначение функции:создание вектора
//Параметры:x,y,z-координаты вектора
//Возвращаемое значение:созданный вектор
//Устанавливаемые значения:нет
//*************************************************************************************************************************
SVector CreateVector(double x,double y,double z)
{
 SVector v;
 v.X=x;
 v.Y=y;
 v.Z=z;
 return(v);
}
//*************************************************************************************************************************
//Назначение функции:нормировка вектора
//Параметры:v-вектор, подлежащий нормировке
//Возвращаемое значение:нормированный вектор
//Устанавливаемые значения:нет
//*************************************************************************************************************************
SVector NormalizeVector(SVector v)
{
 double norma=(double)sqrt(v.X*v.X+v.Y*v.Y+v.Z*v.Z);//вычисляем норму вектора
 if (norma==0) norma=1;//если норма 0, то ставим 1 (на ноль делить нельзя)
 v.X=v.X/norma;//нормируем вектор
 v.Y=v.Y/norma;
 v.Z=v.Z/norma;
 return(v);
}
//*************************************************************************************************************************
//Назначение функции:превращение вектора в специальный вид
//Параметры:v-вектор, подлежащий превращению
//Возвращаемое значение:новый вектор
//Устанавливаемые значения:нет
//*************************************************************************************************************************
SVector VectorToOrt(SVector v)
{
 if (v.X>0) v.X=1;
 if (v.X<0) v.X=-1;
 if (v.Y>0) v.Y=1;
 if (v.Y<0) v.Y=-1;
 if (v.Z>0) v.Z=1;
 if (v.Z<0) v.Z=-1;
 return(v);
}
//*************************************************************************************************************************
//Назначение функции:возвращение нормы вектора
//Параметры:v-вектор
//Возвращаемое значение:норма вектора
//Устанавливаемые значения:нет
//*************************************************************************************************************************
double GetNormaVector(SVector v)
{
 double norma=(double)sqrt(v.X*v.X+v.Y*v.Y+v.Z*v.Z);
 return(norma);
}
//*************************************************************************************************************************
//Назначение функции:вычисление векторного произведения
//Параметры:u,v-вектора
//Возвращаемое значение:векторное произведение
//Устанавливаемые значения:нет
//*************************************************************************************************************************
SVector VectorProduct(SVector u,SVector v)
{
 SVector w;
 w.X=u.Y*v.Z-v.Y*u.Z;
 w.Y=-(u.X*v.Z-v.X*u.Z);
 w.Z=u.X*v.Y-v.X*u.Y;
 return(w);
}
//*************************************************************************************************************************
//Назначение функции:вычисление скалярного произведения двух векторов
//Параметры:u,v-вектора
//Возвращаемое значение:скалярное произведение
//Устанавливаемые значения:нет
//*************************************************************************************************************************
double ScalarProduct(SVector u,SVector v)
{
 double scalar=u.X*v.X+u.Y*v.Y+u.Z*v.Z;
 return(scalar);
}
